// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package publicPages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "hyperbot/cmd/web/layouts"

func LoginPage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"mt-6 text-gray-900 flex justify-center\"><div class=\"m-0 sm:m-10 bg-white sm:rounded-lg flex justify-center flex-1\"><div class=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\"><div><img src=\"https://storage.googleapis.com/devitary-image-host.appspot.com/15846435184459982716-LogoMakr_7POjrN.png\" class=\"w-32 mx-auto\"></div><div class=\"mt-12 flex flex-col items-center\"><h1 class=\"text-2xl xl:text-3xl font-extrabold\">Log In</h1><div class=\"w-full flex-1 mt-8\"><div class=\"mx-auto max-w-xs\"><input class=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\" type=\"tel\" placeholder=\"+25078XXXXXXXX\"> <input class=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\" type=\"password\" placeholder=\"Password\"> <button class=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"><svg class=\"w-6 h-6 -ml-2\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M16 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2\"></path> <circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle> <path d=\"M20 8v6M23 11h-6\"></path></svg> <span class=\"ml-3\">Log In</span></button><p class=\"mt-6 text-xs text-gray-600 text-center\">I agree to abide by templatana's <a href=\"#\" class=\"border-b border-gray-500 border-dotted\">Terms of Service</a> and its <a href=\"#\" class=\"border-b border-gray-500 border-dotted\">Privacy Policy</a></p></div></div></div></div><div class=\"flex-1 bg-indigo-100 text-center hidden lg:flex\"><div class=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\" style=\"background-image: url(&#39;https://storage.googleapis.com/devitary-image-host.appspot.com/15848031292911696601-undraw_designer_life_w96d.svg&#39;);\"></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = webLayouts.PublicLayout().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
